{"version":3,"sources":["component/person.js","services/persons.js","app.js","index.js"],"names":["Person","person","name","number","baseUrl","axios","get","then","response","data","newObject","post","id","delete","object","put","Filter","handleFilter","onChange","PersonForm","addInfo","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","type","Persons","personsFilter","setPersons","setSuccessMessage","map","onClick","window","confirm","personService","filter","item","setTimeout","deletePerson","App","useState","persons","setNewName","setNewNumber","setFilter","successMessage","errorMessage","setErrorMessage","useEffect","initialPersons","SuccessNotification","message","className","ErrorNotification","toLowerCase","includes","event","preventDefault","target","existedName","find","changeNumber","returnedPerson","catch","error","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1423153a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person }) => {\n  return (\n  <div>{person.name} {person.number}</div>\n  )\n}\n\nexport default Person","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const deletePerson = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst put = object => {\n    const request = axios.put(`${baseUrl}/${object.id}`, {...object})\n    return request.then(response => response.data)\n}\n  \n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, deletePerson, put }","import React, { useState, useEffect } from 'react'\nimport Person from './component/person'\nimport personService from './services/persons'\n\nconst Filter = ({ handleFilter }) => {\n    return <div>Filter shown with: <input onChange={handleFilter}/></div>\n}\n\nconst PersonForm = ({ addInfo, newName, handleNameChange, newNumber, handleNumberChange }) => {\n    return (\n        <form onSubmit={addInfo}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    )\n}\n\nconst Persons = ({ personsFilter, setPersons, setSuccessMessage }) => {\n  const deletePerson = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)){\n      personService\n        .deletePerson(person.id)\n        .then(setPersons(personsFilter.filter(item => item.id !== person.id)),\n        setSuccessMessage(`Delete the number of ${person.name} from the server.`),\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000))\n    }\n  }\n  return personsFilter.map(person => \n  <div key={person.name}><Person person={person} number={person}/> <button onClick={() => deletePerson(person)}>delete</button></div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ successMessage, setSuccessMessage ] = useState('Nothing happened...')\n  const [ errorMessage, setErrorMessage ] = useState('Nothing happened...')\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const SuccessNotification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"success\">\n        {message}\n      </div>\n    )\n  }\n  \n  const ErrorNotification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n  \n\n  const addInfo = (event) => {\n    event.preventDefault()\n    let existedName = persons.find(person => person.name === newName);\n    if (existedName) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const changeNumber = {...existedName,number:newNumber};\n        personService\n          .put(changeNumber)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id === changeNumber.id ? returnedPerson : person))\n            setSuccessMessage(`Changed the number of ${returnedPerson.name} to ${returnedPerson.number} in the server.`)\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(`The number of ${newName} has already been removed from the server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        }\n    } else {\n        const infoObject = {\n            name: newName,\n            number: newNumber\n          }\n        \n        personService\n        .create(infoObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setSuccessMessage(`Added the number of ${newName} to the server.`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n          setNewName('')\n          setNewNumber('')\n        })\n        .catch(error => {\n          //alert(error)\n          console.log(error.response.data)\n          setErrorMessage(error.response.data.error)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    event.preventDefault();\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    event.preventDefault();\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    event.preventDefault();\n    setFilter(event.target.value.toLowerCase());\n  }\n\n  const personsFilter = persons.filter(person => person.name.toLowerCase().includes(filter));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <SuccessNotification message={successMessage}/>\n      <ErrorNotification message={errorMessage}/>\n      <Filter handleFilter={handleFilter}/>\n      <h2>Add a new</h2>\n      <PersonForm addInfo={addInfo} newName={newName} handleNameChange={handleNameChange} \n      newNumber={newNumber} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Persons personsFilter={personsFilter} setPersons={setPersons} setSuccessMessage={setSuccessMessage}/> \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n/*\nconst persons = [\n  { name: 'Arto Hellas', number: '040-123456' },\n  { name: 'Ada Lovelace', number: '39-44-5323523' },\n  { name: 'Dan Abramov', number: '12-43-234345' },\n  { name: 'Mary Poppendieck', number: '39-23-6423122' }\n]\n\nReactDOM.render(\n  <App persons={persons} />,\n  document.getElementById('root')\n)*/"],"sourceRoot":""}